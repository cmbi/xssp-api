FROM python:3.9

# dependencies
RUN mkdir /deps
RUN apt-get update ;\
    apt-get install -y cmake make rsync wget git g++ libbz2-dev \
                       doxygen xsltproc docbook docbook-xsl docbook-xml \
                       autoconf automake autotools-dev ncbi-blast\+

# boost
RUN wget https://boostorg.jfrog.io/artifactory/main/release/1.78.0/source/boost_1_78_0.tar.bz2 ;\
    tar xjf boost_1_78_0.tar.bz2 -C /deps/ ;\
    cd /deps/boost_1_78_0 ;\
    ./bootstrap.sh && ./b2 && ./b2 install

# libzeep
RUN git clone https://github.com/mhekkel/libzeep.git /deps/libzeep ;\
    cd /deps/libzeep ;\
    git checkout tags/v3.0.3
# Workaround due to bug in libzeep's makefile
RUN sed -i '71s/.*/\t\$\(CXX\) \-shared \-o \$@ \-Wl,\-soname=\$\(SO_NAME\) \$\(OBJECTS\) \$\(LDFLAGS\)/' /deps/libzeep/makefile
WORKDIR /deps/libzeep
# Run ldconfig manually to work around a bug in libzeep's makefile
RUN make -j ; make install ; ldconfig

# hssp
RUN git clone https://github.com/cmbi/hssp.git /deps/hssp ;\
    cd /deps/hssp ;\
    git checkout tags/3.1.5
WORKDIR /deps/hssp
RUN aclocal ; autoheader ; automake --add-missing ; autoconf
RUN ./configure ; make -j ; make install

# mrc
RUN git clone https://github.com/mhekkel/mrc.git /deps/mrc ;\
    cd /deps/mrc ;\
    git checkout tags/v1.2.3
WORKDIR /deps/mrc 
RUN ./configure ; make -j ; make install

# libcipp
RUN git clone https://github.com/PDB-REDO/libcifpp.git /deps/libcifpp ;\
    cd /deps/libcifpp ;\
    git checkout tags/v3.0.0
WORKDIR /deps/libcifpp
RUN mkdir build
WORKDIR /deps/libcifpp/build
RUN cmake .. && cmake --build . --config Release && ctest -C Release && cmake --install .

# dssp
RUN git clone https://github.com/PDB-REDO/dssp.git /deps/dssp ;\
    cd /deps/dssp
WORKDIR /deps/dssp
RUN mkdir build
WORKDIR /deps/dssp/build
RUN wget http://ftp.wwpdb.org/pub/pdb/data/structures/divided/mmCIF/cb/1cbs.cif.gz
RUN cmake -DCMAKE_PREFIX_PATH=/root/.local .. && cmake --build . --config Release && ctest -DCMAKE_PREFIX_PATH=/root/.local -C Release && cmake --install .

# xssp-api
RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app

COPY requirements.txt /usr/src/app/
RUN pip install --no-cache-dir -r requirements.txt
COPY . /usr/src/app

# settings
ENV C_FORCE_ROOT true
